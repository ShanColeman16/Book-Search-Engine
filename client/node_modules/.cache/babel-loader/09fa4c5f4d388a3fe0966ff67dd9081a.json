{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blkqu\\\\bootcamp\\\\challenges\\\\Book-Search-Engine\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME, removeBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const [deleteBook] = useMutation(REMOVE_BOOK);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || [];\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const {\n        data\n      } = await removeBook({\n        variables: {\n          bookId\n        }\n      });\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"rDVDclMpu7BbfdPgFMkaiqeFtUY=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","GET_ME","removeBook","Auth","REMOVE_BOOK","removeBookId","SavedBooks","loading","data","deleteBook","userData","me","userDataLength","Object","keys","length","handleDeleteBook","bookId","token","loggedIn","getToken","variables","err","console","error","savedBooks","map","book","image","title","authors","description"],"sources":["C:/Users/blkqu/bootcamp/challenges/Book-Search-Engine/client/src/pages/SavedBooks.js"],"sourcesContent":["import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME, removeBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [deleteBook ] = useMutation(REMOVE_BOOK);\n  const userData = data?.me || [];\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n    const handleDeleteBook = async (bookId) => {\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n        return false;\n      }\n    \n    try {\n      const { data } = await removeBook ({\n        variables: { bookId },\n      });\n        // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}